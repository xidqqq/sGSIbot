name: SGSI_Build

on:
  push:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'ROM_URL'
        required: true
        default: 'https://repo.mirrorbot69.workers.dev/0:/miui_COURBETGlobal_V12.5.8.0.RKQMIXM_d3268afe4e_11.0.zip'
      ZIP_NAME:
        description: 'ZIP_NAME'
        required: true
        default: 'update.zip'
      OS_TYPE:
        description: 'OS_TYPE'
        required: true
        default: 'MIUI'
      SGSI_TYPE:
        description: 'SGSI_TYPE(AB, A, or BOTH)'
        required: true
        default: 'AB'

env: 
  DIR : MIUI-12.5.8
  REPACK_NAME : MIUI-12.5.8-AB-11-20211213-RK137SGSI

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Get the source code of this repositorie...
        uses: actions/checkout@main

      - name: Get variable configuration...
        run: |
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV

      - name: Clean up the environment‌‌...
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: Configuration Environment‌‌...
        run: |
          sudo apt-get install -y git wget git zip unzip curl axel expect

      - name: Get the SGSI tool‌‌...
        run: |
          git clone --recurse-submodules https://github.com/rahulkhatri137/SGSI-build-tool.git -b 11 $GITHUB_WORKSPACE/Tool-SGSI-build
          
      - name: Download ROM‌‌...
        run: |
          cd $GITHUB_WORKSPACE/Tool-SGSI-build
          mkdir ./tmp
          wget -U "Mozilla/5.0" ${{ github.event.inputs.ROM_URL }} -O "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/${{ github.event.inputs.ZIP_NAME }}"
          echo "zip_file: $(ls "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/")"

      - name: Configuration tool environment...
        run: |
          sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          sudo bash $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
          java -version

      - name: Make AB type GSI‌‌...
        if: ${{ github.event.inputs.SGSI_TYPE }} == 'AB' || ${{ github.event.inputs.SGSI_TYPE }} == 'BOTH'
        run: |
          sudo bash $GITHUB_WORKSPACE/Tool-SGSI-build/make.sh AB << EOF
          ${{ github.event.inputs.ZIP_NAME }}
          y
          y
          ${{ github.event.inputs.OS_TYPE }}
          y  

      - name: Repack output file ...
        run: |            
          sudo chmod -R 777 $GITHUB_WORKSPACE/Tool-SGSI-build/SGSI
          cd $GITHUB_WORKSPACE/Tool-SGSI-build/SGSI
          ls
          sudo chmod -R 777 system.img
          gzip -fqt9 *img > $REPACK_NAME ; rm -rf *.img
         
      - name: Output Info
        run: cat $GITHUB_WORKSPACE/Tool-SGSI-build/SGSI/build_info.txt   
   
      - name: Upload SGSI to SourceForge
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE/Tool-SGSI-build/SGSI
          ls
          expect -c "
          spawn sftp ${{ secrets.SFUSER }}@frs.sourceforge.net
          expect \"yes/no\"
          send \"yes\r\"
          expect \"Password\"        
          send \"${{ secrets.SFPASS }}\r\"
          expect \"sftp> \"
          send \"cd ${{ secrets.SFDIR }}\r\"
          set timeout -1
          send \"mkdir $DIR\r\"
          expect \"sftp> \"
          send \"cd $DIR\r\"
          set timeout -1
          send \"put *\r\"
          expect \"Uploading\"
          expect \"100%\"
          expect \"sftp>\"
          send \"bye\r\"
          interact"
